--[[
ðŸ”§ ShadowTools v4.1 - Critical Teleport Fix
âœ… ACTUAL server-sided teleportation
âœ… Visual feedback system
âœ… Anti-lag measures
âœ… Polished base management
]]

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("ShadowTools v4.1", "Serpent")

--#region Configuration
local config = {
    Base = {
        Position = nil,
        Set = false,
        Marker = nil,
        TeleportMethod = "CFrame" -- "CFrame" or "Network"
    },
    Visual = {
        TeleportEffect = true,
        EffectColor = Color3.fromRGB(0, 255, 255),
        EffectDuration = 1
    },
    Safety = {
        TeleportWaitTime = 0.5,
        Cooldown = 3,
        LastTeleport = 0
    }
}
--#endregion

--#region Base Location System
local function createBaseMarker()
    if config.Base.Marker then 
        config.Base.Marker:Destroy() 
    end

    local marker = Instance.new("Part")
    marker.Size = Vector3.new(4, 0.2, 4)
    marker.Position = config.Base.Position + Vector3.new(0, -2.5, 0)
    marker.Anchored = true
    marker.CanCollide = false
    marker.Color = Color3.fromRGB(0, 255, 127)
    marker.Transparency = 0.4
    marker.Material = Enum.Material.Neon
    marker.Name = "ST_BaseMarker"

    -- Pulsing animation
    coroutine.wrap(function()
        while marker and marker.Parent do
            game:GetService("TweenService"):Create(
                marker,
                TweenInfo.new(1, Enum.EasingStyle.Quad),
                {Transparency = 0.7}
            ):Play()
            task.wait(1)
            game:GetService("TweenService"):Create(
                marker,
                TweenInfo.new(1, Enum.EasingStyle.Quad),
                {Transparency = 0.4}
            ):Play()
            task.wait(1)
        end
    end)()

    config.Base.Marker = marker
    marker.Parent = workspace
    return marker
end

local function setBaseLocation()
    local char = game.Players.LocalPlayer.Character
    if not char then 
        Library:Notify("Error", "Character not found!", 3)
        return false 
    end

    local root = char:FindFirstChild("HumanoidRootPart")
    if not root then 
        Library:Notify("Error", "Missing HumanoidRootPart!", 3)
        return false 
    end

    config.Base.Position = root.Position
    config.Base.Set = true
    createBaseMarker()
    
    Library:Notify("Success", "Base location set!", 5)
    return true
end
--#endregion

--#region Server-Sided Teleport System
local function createTeleportEffect(position)
    if not config.Visual.TeleportEffect then return end
    
    local effect = Instance.new("Part")
    effect.Size = Vector3.new(5, 5, 5)
    effect.Position = position
    effect.Anchored = true
    effect.CanCollide = false
    effect.Transparency = 0.7
    effect.Color = config.Visual.EffectColor
    effect.Material = Enum.Material.Neon
    effect.Shape = Enum.PartType.Ball
    effect.Parent = workspace

    game:GetService("TweenService"):Create(
        effect,
        TweenInfo.new(config.Visual.EffectDuration),
        {Size = Vector3.new(15, 15, 15), Transparency = 1}
    ):Play()

    game.Debris:AddItem(effect, config.Visual.EffectDuration + 0.1)
end

local function serverSidedTeleport(position)
    -- Cooldown check
    if tick() - config.Safety.LastTeleport < config.Safety.Cooldown then
        Library:Notify("Warning", "Teleport on cooldown!", 3)
        return false
    end
    config.Safety.LastTeleport = tick()

    local char = game.Players.LocalPlayer.Character
    if not char then return false end

    local root = char:FindFirstChild("HumanoidRootPart")
    if not root then return false end

    -- Visual effect at current position
    createTeleportEffect(root.Position)

    -- Actual teleportation methods
    if config.Base.TeleportMethod == "Network" then
        -- Method 1: Network ownership trick
        local original = root.AssemblyLinearVelocity
        root.AssemblyLinearVelocity = Vector3.new(0, 100, 0)
        task.wait(0.05)
        root.CFrame = CFrame.new(position)
        root.AssemblyLinearVelocity = original
    else
        -- Method 2: CFrame + Velocity reset
        root.CFrame = CFrame.new(position)
        task.wait(0.1)
        root.Velocity = Vector3.new()
    end

    -- Visual effect at new position
    createTeleportEffect(position)

    -- Wait for server to confirm
    task.wait(config.Safety.TeleportWaitTime)

    -- Verify teleport succeeded
    if (root.Position - position).Magnitude > 10 then
        Library:Notify("Warning", "Teleport partially failed!", 3)
        return false
    end

    return true
end

local function teleportToBase()
    if not config.Base.Set then
        Library:Notify("Error", "No base location set!", 3)
        return false
    end

    return serverSidedTeleport(config.Base.Position)
end
--#endregion

--#region GUI Construction
local MainTab = Window:NewTab("Main")
local mainSection = MainTab:NewSection("Base Management")

-- Base Location Toggle
mainSection:NewToggle("Base Location Set", "Toggle to set current position", function(state)
    if state then
        if setBaseLocation() then
            Library:Notify("Success", "Base location saved", 3)
        else
            -- Reset toggle if failed
            local toggle = mainSection:FindFirstChild("Base Location Set")
            if toggle then toggle:SetState(false) end
        end
    else
        config.Base.Set = false
        if config.Base.Marker then
            config.Base.Marker:Destroy()
            config.Base.Marker = nil
        end
    end
end)

-- Teleport Button with visual feedback
local teleportBtn = mainSection:NewButton("Teleport to Base", "Server-sided teleport", function()
    teleportBtn.Text = "TELEPORTING..."
    teleportBtn.TextColor3 = Color3.fromRGB(255, 255, 0)
    
    local success = teleportToBase()
    
    teleportBtn.Text = "Teleport to Base"
    teleportBtn.TextColor3 = success and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 50, 50)
    
    task.wait(0.5)
    teleportBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
end)

-- Base Coordinates Display
mainSection:NewLabel(config.Base.Set 
    and string.format("Base: [X:%.1f, Y:%.1f, Z:%.1f]", 
        config.Base.Position.X, 
        config.Base.Position.Y, 
        config.Base.Position.Z)
    or "Base: Not set")

-- Settings Tab
local SettingsTab = Window:NewTab("Settings")
local teleportSection = SettingsTab:NewSection("Teleport Settings")

teleportSection:NewDropdown("Teleport Method", "How teleportation works", 
    {"CFrame", "Network"}, function(method)
    config.Base.TeleportMethod = method
end)

teleportSection:NewToggle("Teleport Effects", "Visual teleport effects", function(state)
    config.Visual.TeleportEffect = state
end)

teleportSection:NewColorPicker("Effect Color", "Color of teleport effects", 
    config.Visual.EffectColor, function(color)
        config.Visual.EffectColor = color
end)

teleportSection:NewSlider("Effect Duration", "How long effects last", 3, 0.5, 1, function(value)
    config.Visual.EffectDuration = value
end)
--#endregion

--#region Initialization
-- Set default teleport method
config.Base.TeleportMethod = "Network"

Library:Notify("ShadowTools v4.1", "Server-sided teleport system ready")
--#endregion
